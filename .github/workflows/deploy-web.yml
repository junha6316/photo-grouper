name: Deploy Web App

on:
  push:
    paths:
      - "packages/web/**"
      - ".github/workflows/deploy-web.yml"
    branches:
      - main
      - develop
  pull_request:
    paths:
      - "packages/web/**"
    branches:
      - main

env:
  NODE_VERSION: "20"

jobs:
  deploy:
    name: Build and Deploy Web App
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: packages/web/pnpm-lock.yaml

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: |
          cd packages/web
          pnpm install --frozen-lockfile

      - name: Build web application
        run: |
          cd packages/web
          pnpm run build

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd packages/web
          pnpm run deploy

      - name: Deployment summary
        run: |
          echo "‚úÖ Web application deployed successfully"
          echo "üåê Environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}"
          echo "üì¶ Branch: ${{ github.ref_name }}"

  test:
    name: Test Web App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: packages/web/pnpm-lock.yaml

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: |
          cd packages/web
          pnpm install --no-frozen-lockfile

      - name: Run linter
        run: |
          cd packages/web
          pnpm run lint

      - name: Build for testing
        run: |
          cd packages/web
          pnpm run build

      - name: Test summary
        run: |
          echo "‚úÖ Web application tests passed"
          echo "üîç Linting: Passed"
          echo "üèóÔ∏è Build: Successful"
